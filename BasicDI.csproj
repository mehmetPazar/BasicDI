<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <Title>BasicDI</Title>
    <Description>BasicDI is an implementation of the DI principle. 
It basically ensures that all classes with a specific interface/implementation are automatically added to the DI container. 
So you can define all classes and interfaces together without having to add each dependency separately.</Description>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <RepositoryUrl>https://github.com/mehmetPazar/BasicDI</RepositoryUrl>
    <PackageTags>.NET,Dependency Injection,BasicDI,DI,IOC,Inversion of Control,IoC Container</PackageTags>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="7.0.0" />
  </ItemGroup>

  <ItemGroup>
    <None Update="README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

</Project>
